@inject ApplicationDbContext dbContext
@inject NavigationManager NavManager

<div class="sidebar-window workspaces @View">
    <div class="sidebar-head">
        <p class="sidebar-name"></p>
    </div>
    <ul class="sidebar-content">
        <li class="sidebar-content-add"><button class="sidebar-btn" @onclick='() => AddWorkspace()'>Создать пространство</button></li>
        @foreach (var workspace in @dbContext.Workspaces)
        {
            <li class="sidebar-item workspace">
                <button class="workspace-edit" @onclick='() => JoinWorkspace(workspace.Id)'>@workspace.Name</button>
                @* <ul class="workspace-samples">
                    @foreach (var plugin in @dbContext.Plugins.Where(p => dbContext.WorkspacePluginRelations.Where(wpr => wpr.WorkspaceId == workspace.Id).Select(wpr => wpr.PluginId).Contains(p.Id)))
                    {
                        <li class="workspace-plugin plugin">
                            <p class="plugin-name">@plugin.Name</p>
                        </li>
                    }
                </ul> *@
                <button class="workspace-edit" @onclick='() => EditWorkspace(workspace.Id)'>E</button>
                <button class="workspace-delete" @onclick='() => DeleteWorkspace(workspace.Id)'>D</button>
            </li>
        }
    </ul>
</div>


@code {
    [Parameter]
    public string? View { get; set; }

    public void AddWorkspace(){
        NavManager.NavigateTo("/WorkspaceAdd/" + Guid.NewGuid().ToString());
    }

    public void DeleteWorkspace(string workspace_id){
        var workspace = dbContext.Workspaces.FirstOrDefault(w => w.Id == workspace_id);
        if(workspace is not null){
            dbContext.Workspaces.Remove(workspace);
            dbContext.SaveChanges();
        }
    }

    public void EditWorkspace(string workspace_id){
        NavManager.NavigateTo("/WorkspaceEditor/" + workspace_id);
    }
    public void JoinWorkspace(string workspace_id){
        NavManager.NavigateTo("/Workspace/" + workspace_id);
    }
}
