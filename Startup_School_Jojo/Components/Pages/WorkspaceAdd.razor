@page "/WorkspaceAdd/{guid}"

@using System.Collections.Generic
@inject ApplicationDbContext dbContext
@inject NavigationManager NavManager

<div class="container">
    <h4>WorkspaceEditor</h4>

    <div class="form-group">
        <label for="workspaceName">Название:</label>
        <input id="workspaceName" class="form-control" type="text" @bind="@WorkspaceName" />
    </div>

    <div class="row">
        <div class="col">
            <label for="availablePlugins">Доступные плагины:</label>
            <ul id="availablePlugins" class="list-group">
                @foreach (var plugin in dbContext.Plugins)
                {
                    <li class="list-group-item">
                        <button class="btn btn-outline-primary" @onclick='() => AddPluginInWorkspace(plugin.Id)'>@plugin.Name</button>
                    </li>
                }
            </ul>
        </div>

        <div class="col">
            <label for="addedPlugins">Добавленные плагины:</label>
            <ul id="addedPlugins" class="list-group">
                @foreach (var plugin_id in AddedPlugins)
                {
                    <li class="list-group-item">@dbContext.Plugins.FirstOrDefault(p => p.Id == plugin_id).Name</li>
                }
            </ul>
        </div>
    </div>

    <div class="form-group">
        <button class="btn btn-primary" @onclick="@SaveData">Сохранить</button>
    </div>
</div>

@code {
    [Parameter]
    public string? guid { get; set; }

    private string WorkspaceName { get; set; } = "";

    // Заменить на свойства с реальными данными
    public List<string> AddedPlugins { get; set; } = new List<string>();

    public void AddPluginInWorkspace(string plugin_id)
    {
        AddedPlugins.Add(plugin_id);
    }

    private void SaveData()
    {
        dbContext.Workspaces.Add(new Workspace
        {
            Id = guid,
            Name = WorkspaceName,
            Icon = "",
            Settings = ""
        });

        foreach (string plugin_id in AddedPlugins)
        {
            dbContext.WorkspacePluginRelations.Add(new WorkspacePluginRelation
            {
                WorkspaceId = guid,
                PluginId = plugin_id
            });
        }

        dbContext.SaveChanges();
        StateHasChanged();
    }

}